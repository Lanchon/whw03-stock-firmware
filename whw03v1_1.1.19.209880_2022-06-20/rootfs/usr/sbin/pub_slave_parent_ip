#!/bin/sh
#
# Copyright (c) 2016, Belkin Inc. All rights reserved.
#
# Publish IP address of a slave

PROGNAME="$(basename $0)"

# Set common values
source /etc/init.d/ulog_functions.sh
source /etc/init.d/sub_pub_funcs.sh

errout () {
    echo "$*" 1>&2
}

debout () {
    [ "$DEBUG" ] && errout "$*"
}

die() {
    errout "$PROGNAME: " "$*"
    exit 1
}

usage() {
    cat <<EOF
$PROGNAME Publish Slave parent IP to subscribers.
Usage:
        $PROGNAME {options} {FILE}
Where {options} are one or more of:
  -n          Dry run; don't send notification, just show command
  -p {IP}     Parent IP
  -h          This help
Note: If -p {IP} is used then a backhaul status file is not needed.
EOF
}

# $1: IP
# $2: topic
pub_ip () {
    [ $# -lt 2 ] && die "Missing parameters to pub_ip"
    local IP="$1"
    local PUB_TOPIC="$2"
    debout "Sending parent IP $IP to $PUB_TOPIC"
    echo "$IP" | publish "$PUB_TOPIC"
}

while getopts ":dnp:h" opt;do
    case $opt in
        d)  DEBUG=1 ;;
        p)  PARENT_IP=$OPTARG ;;
        n)  FAKE="echo" ;;
        h) usage ; exit 0 ;;
        \?)
           echo "Invalid option: -$OPTARG" >&2
           usage
           exit 1
           ;;
        :)
           echo "Option -${OPTARG} needs an argument." >&2
           usage
           exit 1
           ;;
    esac
done
shift $((OPTIND-1))

if [ -z "$PARENT_IP" ]; then
    if [ "$#" -lt 1 ]; then
        usage
        exit 1
    fi
    BH_FILE="$1"
    UUID="$(jsonparse uuid < $BH_FILE)"
    validate UUID
    PARENT_IP="$(find_parent_ip $BH_FILE)"
    validate PARENT_IP
fi

PUB_TOPIC="$(omsg-conf -s PARENT-IP | sed "s/%uuid/$UUID/" )"
validate PUB_TOPIC

if [ $DEBUG ];then
    echo "$0 Options:"
    echo "   BIND_ADDR: '$BIND_ADDR'"
    echo "   HOST_PORT: '$HOST_PORT'"
    echo "   HOST_ADDR: '$HOST_ADDR'"
    echo "   TOPIC:     '$PUB_TOPIC'"
    echo "   IP:        '$PARENT_IP'"
fi

$FAKE pub_ip $PARENT_IP $PUB_TOPIC
